@page
@model Boletaje.Pages.Movimientos.IndexModel
@{
    ViewData["Title"] = "Movimientos";
}
@using System.Globalization;
@{
    NumberFormatInfo formato = new CultureInfo("en-US").NumberFormat;
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";


}
@section breadcrumb{

    <li class="breadcrumb-item">
        <a asp-page="./Index">BackOffice</a>
    </li>


}




@section styles{

    <style>
        .tableFixHead th {
            position: sticky;
            top: 0;
            background: white;
        }
    </style>

}


@section scripts{


    <script>
        $(document).ready(function () {
            jQuery(document).ready(function ($) {

            });



            $(document).ready(function () {
                $('#tablita').DataTable();
            });


        });
        var ids = 0;
        var correo = '';
        function onClickModal(id, correos) {
            ids = id;
            correo = correos;


            Swal.fire({
                title: "¿Desea reenviar este correo?",
                input: "text",
                inputValue: correo,
                showCancelButton: true,
                confirmButtonText: "Enviar",
                cancelButtonText: "Cancelar",
                inputValidator: nombre => {
                    // Si el valor es válido, debes regresar undefined. Si no, una cadena
                    if (!nombre) {
                        return "Por favor escribe el correo";
                    } else {
                        return undefined;
                    }
                }
            })
                .then(resultado => {
                    if (resultado.value) {
                          $("#divProcesando").modal("show");
                        let nombre = resultado.value;
                        correo = nombre;
                        Reenviar();
                    }
                });






        }

        function  Reenviar() {

         $.ajax({
                        type: 'GET',
                        dataType: 'json',
             url: '@Url.Page("Index", "Reenviar")',
             data: { id: ids, correos: correo },
             success: function (result) {
                 console.log(result);
                             if (result == false) {
                                   $("#divProcesando").modal("hide");
                                 ids = 0;
                                 Swal.fire({
                                     icon: 'error',
                                     title: 'Oops...',
                                     text: 'Ha ocurrido un error al intentar reenviar'

                                 })

                             } else {
                                   $("#divProcesando").modal("hide");
                                 Swal.fire({
                                     title: "Ha sido reenviado con éxito",

                                     icon: 'success',
                                     showCancelButton: false,
                                     customClass: {
                                         confirmButton: 'swalBtnColor',

                                     },
                                     confirmButtonText: 'OK'
                                 }).then((result) => {
                                     if (result.isConfirmed) {

                                     }
                                 })
                             }
             },
             beforeSend: function () {

             }
                     })
        }



        
        function onClickModalEliminar(id) {

        ids = id;


            Swal.fire({
                title: '¿Desea eliminar ese usuario?',
                showDenyButton: true,
                showCancelButton: false,
                confirmButtonText: `Aceptar`,
                denyButtonText: `Cancelar`,
                customClass: {
                    confirmButton: 'swalBtnColor',
                    denyButton: 'swalDeny'
                },
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {

                    Eliminar();

                }
            })


    }
        function  Eliminar() {


         $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        url: '@Url.Page("Index", "Eliminar")',
                        data: { id: ids },
             success: function (result) {

                             if (result == false) {
                                 ids = 0;
                              
                                 Swal.fire({
                                     icon: 'error',
                                     title: 'Oops...',
                                     text: 'Ha ocurrido un error al intentar eliminar'

                                 })
                             } else {
                                 Swal.fire({
                                     title: "Ha sido eliminado con éxito",

                                     icon: 'success',
                                     showCancelButton: false,
                                     customClass: {
                                         confirmButton: 'swalBtnColor',

                                     },
                                     confirmButtonText: 'OK'
                                 }).then((result) => {
                                     if (result.isConfirmed) {
                                         location.reload();
                                     }
                                 })
                             }
             },
             beforeSend: function () {

             },
             complete: function () {

             }
                     })
        }


        function  Aprobar(id) {
            var idEnviar = id;
         $.ajax({
                        type: 'GET',
                        dataType: 'json',
             url: '@Url.Page("Index", "Aprobar")',
             data: { id: idEnviar },
             success: function (result) {
                 console.log(result);
                             if (result == false) {
                                 ids = 0;
                                 Swal.fire({
                                     icon: 'error',
                                     title: 'Oops...',
                                     text: 'Ha ocurrido un error al intentar Aprobar'

                                 })

                             } else {
                                 Swal.fire({
                                     title: "Ha sido Aprobado con éxito",

                                     icon: 'success',
                                     showCancelButton: false,
                                     customClass: {
                                         confirmButton: 'swalBtnColor',

                                     },
                                     confirmButtonText: 'OK'
                                 }).then((result) => {
                                     if (result.isConfirmed) {

                                     }
                                 })
                             }
             },
             beforeSend: function () {

             }
                     })
        }
    </script>

}

@using Microsoft.AspNetCore.Http
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Security.Claims;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Configuration;
@using Refit;
@using Sicsoft.Checkin.Web.Models;
@inject IHttpContextAccessor httpContextAccessor

<div class="row">
    <div class="col-md-12   ">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Filtro</h4>

            </div>
            <div class="card-body">
                <form method="get">
                    <div class="row">
                        <div class="col-sm-4 pr-1">
                            <div class="form-group">
                                <label>Fecha Inicial</label>
                                <input class="form-control" id="FecInicial" type="date" asp-for="filtro.FechaInicial">
                            </div>


                        </div>

                        <div class="col-sm-4 pr-1">
                            <div class="form-group">
                                <label>Fecha Final</label>
                                <input class="form-control" id="FecFinal" type="date" asp-for="filtro.FechaFinal">
                            </div>
                        </div>

                        <div class="col-md-4 pl-1">
                             <div class="form-group">
                                <label>Estado de la Llamada</label>
                                <select id="estadoLlamada" class="form-control" asp-for="filtro.Codigo2">
                                      <option value="0">Seleccione</option>
                                    @foreach(var item in Model.Status)
                                    {
                                         <option value="@item.idSAP">@item.idSAP - @item.Nombre</option>
                                    }

                                </select>
                            </div>


                         
                        </div>
                         <div class="col-md-4 pr-1">
                             <div class="form-group">
                                <label>Tipo Movimiento</label>
                                <select id="tMovimiento" class="form-control" asp-for="filtro.Codigo1">
                                      <option value="0">Seleccione</option>
                                     
                                         <option value="1">Oferta de Venta</option>
                                         <option value="2">Entrega</option>
                                         <option value="3">Cotización BackOffice</option>

                                   

                                </select>
                            </div>


                         
                        </div>

                        
                        <div class="col-sm-12">
                            <br />
                        </div>


                        <div class="col-sm-6 pr-1">
                        </div>
                        <div class="col-sm-6 pl-1" style="text-align: right;">
                            <button title="Buscar" type="submit" class="btn btn-rounded btn-outline-primary"> <i class="fas fa-search"></i></button>

                        </div>

                    </div>

                </form>

            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-8">
                        <h5>BackOffice</h5>
                    </div>
                    <div class="col-md-4">


                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered first">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Llamada</th>
                                <th>Estado Llamada</th>

                                <th>Cliente</th>
                                <th>Fecha</th>
                                <th>Tipo Movimiento</th>
                                <th>Subtotal</th>
                                <th>Impuestos</th>

                                <th>Descuento</th>
                                <th>Total</th>


                                <th>Acción</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Objeto)
                            {
                            <tr>
                                <td>@item.id</td>
                                <td>@item.NumLlamada</td>
                                @{var DocEntry = Convert.ToInt32(item.NumLlamada);}
                                <td> @(Model.InputLlamada.Where(a => a.DocEntry == DocEntry).FirstOrDefault() == null ? "0" : Model.Status.Where(b => b.idSAP == Model.InputLlamada.Where(a => a.DocEntry == DocEntry).FirstOrDefault().Status.Value.ToString()).FirstOrDefault() == null ? "Sin Status" : Model.Status.Where(b => b.idSAP == Model.InputLlamada.Where(a => a.DocEntry == DocEntry).FirstOrDefault().Status.Value.ToString()).FirstOrDefault().Nombre  ) </td>


                                <td>@item.CardCode - @item.CardName</td>
                                <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                                @{switch (item.TipoMovimiento)
                                {
                                    case 1:
                                        {
                                            <td>Oferta de Venta</td>
                                            break;
                                        }
                                    case 2:
                                        {
                                                    <td>Entrega</td>
                                             break;
                                        }
                                    case 3:
                                        {
                                                     <td>Cotización BackOffice</td>
                                              break;
                                        }
                                        
                                }
                                }
                                <td align="right">@decimal.Round(item.Subtotal, 2).ToString("N", formato)</td>
                                <td align="right">@decimal.Round(item.Impuestos, 2).ToString("N", formato)</td>

                                <td align="right">@decimal.Round(item.Descuento, 2).ToString("N", formato)</td>
                                <td align="right">@decimal.Round(item.TotalComprobante, 2).ToString("N", formato)</td>

                                <td>
                                    @if (item.DocEntry == 0)
                                    {

                                        <a asp-page="./Editar" asp-route-id="@item.id" title="Generar" class="btn btn-rounded btn-outline-warning"> Generar</a>
                                    }
                                    else
                                    {
                                        
                                        <a onclick="javascript: onClickModal('@item.id', '@(Model.InputLlamada.Where(a => a.DocEntry == DocEntry).FirstOrDefault() == null ? "" : Model.InputLlamada.Where(a => a.DocEntry == DocEntry).FirstOrDefault().EmailPersonaContacto )')" title="Reenviar" class="btn btn-rounded btn-outline-warning">Reenviar Correo</a> 
                                        @if (item.TipoMovimiento == 1 || item.TipoMovimiento == 3 )
                                       {
                                         <a asp-page="./Editar" asp-route-id="@item.id" title="Generar" class="btn btn-rounded btn-outline-warning"> Regenerar</a>
                                           
                                       }
                                    }
                                    &nbsp;
                                    <a asp-page="./Observar" asp-route-id="@item.id" title="Observar" class="btn btn-rounded btn-outline-primary"> Observar</a>
                                    &nbsp;
                                    @if (item.TipoMovimiento == 1 || item.TipoMovimiento == 3 )
                                    {
                                        <a onclick="javascript: onClickModalEliminar('@item.id')" title="Activar/Desactivar" class="btn btn-rounded btn-outline-danger">Eliminar</a>

                                    }

                                    &nbsp;
                                    @if (item.TipoMovimiento == 3)
                                    {
                                        <a onclick="javascript: Aprobar('@item.id')" title="Aprobar Cotizacion" class="btn btn-rounded btn-outline-secondary">Aprobar</a>

                                    }
                                </td>
                            </tr>
                            }


                        </tbody>
                        <tfoot>
                            <tr>
                                <th>ID</th>
                                <th>Llamada</th>
                                <th>Estado Llamada</th>

                                <th>Cliente</th>
                                <th>Fecha</th>
                                <th>Tipo Movimiento</th>
                                <th>Subtotal</th>
                                <th>Impuestos</th>

                                <th>Descuento</th>
                                <th>Total</th>
                                <th>Acción</th>

                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

