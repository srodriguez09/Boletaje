@page "{id}"
@model Boletaje.Pages.Reparacion.EditarModel
@{
    ViewData["Title"] = "Editar Repuestos";
}
@section breadcrumb{

    <li class="breadcrumb-item">
        <a asp-page="./Index">Repuestos</a>
    </li>
    <li class="breadcrumb-item active">
        <a>Listado de Repuestos</a>
    </li>

}

    @using System.Globalization;
    @{
    NumberFormatInfo formato = new CultureInfo("en-US").NumberFormat;
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";


}
@section styles{

    <style>

        #menu {
            float: left;
            width: 100%;
            background-color: #fff;
        }

            #menu img {
                width: 12%;
                margin: 2%;
                cursor: pointer;
            }

        #principal {
            float: left;
            width: 75%;
        }

        #visor {
            width: 60%;
            margin: 10%
        }

            #visor img {
                width: 100%
            }



        h4 {
            font-size: 22px !important;
        }

        body {
            margin: 0;
        }

        img {
            border: none;
        }

        button, h1 {
            margin: 0;
            padding: 0;
        }

        #wrapper {
            width: 100%;
        }

        h1 {
            padding: 50px 0;
            text-align: center;
        }



        .preload {
            padding-top: 20px;
            text-align: center;
            display: none;
        }

        .activate-preload {
            display: block;
        }

        #container-input {
            width: 640px;
            margin: 0 auto;
            border: solid 1px #CCC;
            position: relative;
            overflow: hidden;
        }

            #container-input .wrap-file .content-icon-camera {
                width: 55px;
                overflow: hidden;
            }

                #container-input .wrap-file .content-icon-camera:hover {
                    background-color: #e6e6e6;
                }

                #container-input .wrap-file .content-icon-camera .icon-camera {
                    width: 36px;
                    height: 36px;
                    background: url('../../camera.png') no-repeat;
                    cursor: pointer;
                    position: absolute;
                    top: 8px;
                    left: 8px;
                }

                #container-input .wrap-file .content-icon-camera #file {
                    padding: 15px;
                    opacity: 0;
                    position: relative;
                    cursor: pointer;
                    left: -120px;
                    z-index: 1;
                }

            #container-input .wrap-file #preview-images .thumbnail {
                width: 120px;
                height: 120px;
                display: inline-block;
                vertical-align: middle;
                border: solid 2px #CCC;
                background-size: cover;
                position: relative;
            }

                #container-input .wrap-file #preview-images .thumbnail:not(:last-child) {
                    margin-right: 5px;
                }

                #container-input .wrap-file #preview-images .thumbnail .close-button {
                    width: 20px;
                    height: 20px;
                    background-color: black;
                    color: white;
                    text-align: center;
                    position: absolute;
                    top: 5px;
                    right: 5px;
                    border-radius: 100px;
                    cursor: pointer;
                }

            #container-input #publish {
                padding: 15px 35px;
                font-size: 1.1em;
                float: right;
                border: none;
                cursor: pointer;
                background-color: #8ECA67;
                color: #FFF;
            }

                #container-input #publish:hover {
                    background-color: #6EAD45;
                }
    </style>

}

    @section scripts{
    @*@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@

    <script>
        $(document).ready(function() {

            jQuery(document).ready(function($) {
                $(document).ready(function() {
                });
            });
            onChangeTipoMovimiento();
            Recuperar();
        });


        var ProdCadena = [];
        var ProdCadenaM = [];
        var ErroresP = [];
        var Errores = [];
        var Control = [];
        function Recuperar() {
            try {
                ProdCadena = [];
                ProdCadenaM = [];
                ErroresP = [];
                Errores = [];

                var disponibles = JSON.parse($("#HijosDisponibles").val());
                var seleccionados = JSON.parse($("#HijosSeleccionados").val());  //Viene de input
                Errores = JSON.parse($("#Errores").val());
                Control = JSON.parse($("#Control").val());
                var idError = '@Model.Encabezado.idDiagnostico';

                console.log(disponibles);

                for (var i = 0; i < disponibles.length; i++) {
                    var detalle = {
                        id: 0,
                        idEncabezado: "",
                        idProducto: disponibles[i].id,
                        ItemCode: disponibles[i].codSAP + " | " + disponibles[i].Nombre,
                        Cantidad: disponibles[i].Cantidad,
                        idError: disponibles[i].idError,
                        Stock: disponibles[i].Stock

                    };
                    ProdCadena.push(detalle);

                }
                for (var i = 0; i < seleccionados.length; i++) {
                    var detalle = {
                        id: 0,
                        idEncabezado: "",
                        idProducto: seleccionados[i].idProducto,
                        ItemCode: seleccionados[i].ItemCode,
                        Cantidad: seleccionados[i].Cantidad,
                        idError: seleccionados[i].idError,
                        Stock: seleccionados[i].Stock



                    };
                    ProdCadenaM.push(detalle);

                }

                if (parseInt(idError) > 0) {
                    var ErroresTemp = Errores.filter(a => a.idDiagnostico == parseInt(idError));
                    for (var i = 0; i < ErroresTemp.length; i++) {
                        var detalle = {
                            id: ErroresTemp[i].id,
                            idDiagnostico: ErroresTemp[i].idDiagnostico,
                            Descripcion: ErroresTemp[i].Descripcion,
                            Diagnostico: ErroresTemp[i].Diagnostico


                        };
                        ErroresP.push(detalle);

                    }

                }
                $("#rowRepDevolver").hide();
                RellenaTablaG();
                RellenaTablaM();

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e + ' - ' + e.stack

                })
            }
        }

        function onChangeDiagnostico() {
            try {

                var idError = $("#idDiag").val();
                ErroresP = [];
                if (parseInt(idError) > 0) {
                    var ErroresTemp = Errores.filter(a => a.idDiagnostico == parseInt(idError));
                    for (var i = 0; i < ErroresTemp.length; i++) {
                        var detalle = {
                            id: ErroresTemp[i].id,
                            idDiagnostico: ErroresTemp[i].idDiagnostico,
                            Descripcion: ErroresTemp[i].Descripcion,
                            Diagnostico: ErroresTemp[i].Diagnostico


                        };
                        ErroresP.push(detalle);

                    }

                }

                RellenaTablaG();
                RellenaTablaM();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e + ' - ' + e.stack

                })
            }

        }

        function InsertarProductoTablaMia(i) {
            try {
                var detalle =
                {
                    id: 0,
                    idEncabezado: "",
                    idProducto: ProdCadena[i].idProducto,
                    ItemCode: ProdCadena[i].ItemCode,
                    Cantidad: ProdCadena[i].Cantidad,
                    Stock: ProdCadena[i].Stock



                }
                ProdCadenaM.push(detalle);

                ProdCadena.splice(i, 1);
                RellenaTablaM();
                RellenaTablaG();

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e + ' - ' + e.stack

                })
            }

        }

        function InsertarProductoTablaG(i) {

            var detalle =
            {
                id: 0,
                idEncabezado: "",
                idProducto: ProdCadenaM[i].idProducto,
                ItemCode: ProdCadenaM[i].ItemCode,
                Cantidad: ProdCadenaM[i].Cantidad,
                Stock: ProdCadenaM[i].Stock


            }
            ProdCadena.push(detalle);

            ProdCadenaM.splice(i, 1);
            RellenaTablaM();
            RellenaTablaG();

        }


        function EliminarProductoDevolver(i) {
            ProdCadenaM.splice(i, 1);
            RellenaTablaRD(false);
        }

        function PasarTodasDerecha() {


            var tam = ProdCadenaM.length;
            var tam2 = ProdCadena.length;


            for (var i = 0; i < ProdCadena.length; i++) {

                var detalle =
                {
                    id: 0,
                    idEncabezado: "",
                    idProducto: ProdCadena[i].idProducto,
                    ItemCode: ProdCadena[i].ItemCode,
                    Cantidad: ProdCadena[i].Cantidad,
                    Stock: ProdCadena[i].Stock

                }
                ProdCadenaM.push(detalle);
            }

            ProdCadena = [];


            RellenaTablaM();
            RellenaTablaG();
        }

        function PasarTodasIzquierda() {
            var tam = ProdCadena.length;
            var tam2 = ProdCadenaM.length;

            console.log(tam2);
            for (var i = 0; i < tam2; i++) {

                var detalle =
                {
                    id: 0,
                    idEncabezado: "",
                    idProducto: ProdCadenaM[i].idProducto,
                    ItemCode: ProdCadenaM[i].ItemCode,
                    Cantidad: ProdCadenaM[i].Cantidad,
                    Stock: ProdCadenaM[i].Stock

                }
                ProdCadena.push(detalle);
            }


            ProdCadenaM = [];


            RellenaTablaM();
            RellenaTablaG();
        }

        function RellenaTablaG() {
            var sOptions = '';

            $("#tbody1").html('');

            for (var i = 0; i < ProdCadena.length; i++) {
                sOptions += '<tr>'
                sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadena[i].ItemCode + '</p></td>';
                sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + formatoDecimal(ProdCadena[i].Cantidad) + '</p></td>';
                sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadena[i].Stock + '</p></td>';


                sOptions += '<td align="center" style="padding-top:15px;"><a  onclick="javascript: InsertarProductoTablaMia(' + i + ')" style="cursor: pointer; font-size: 25px; line-height: 0px;"  title="Pasar Modulo" > > </a></td> ';



                sOptions += '</tr>'
            }
            $("#tbody1").html(sOptions);
        }
        function RellenaTablaM() {
            var sOptions = '';

            $("#tbody2").html('');

            for (var i = 0; i < ProdCadenaM.length; i++) {
                sOptions += '<tr>'
                sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].ItemCode + '</p></td>';
                sOptions += '<td align="left" style="padding-top:15px;">  <input id="cantidad-' + i + '" value="' + formatoDecimal(ProdCadenaM[i].Cantidad) + '"  type="number" /> </td>';
                sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].Stock + '</p></td>';


                sOptions += '<td align="left" style="padding-top:15px;">  <select id="error-' + i + '" class="form-control" >  <option value="0">Sin Diagnostico</option> ';
                for (var a = 0; a < ErroresP.length; a++) {
                    if (ProdCadenaM[i].idError == ErroresP[a].id) {
                        sOptions += '<option value="' + ErroresP[a].id + '" selected>' + ErroresP[a].Descripcion + '</option>';

                    } else {
                        sOptions += '<option value="' + ErroresP[a].id + '">' + ErroresP[a].Descripcion + '</option>';

                    }

                }

                sOptions += '</select> </td>';

                sOptions += '<td align="center" style="padding-top:15px;"><a  onclick="javascript: InsertarProductoTablaG(' + i + ')" style="cursor: pointer; font-size: 25px; line-height: 0px;" title="Pasar Modulo" > < </a> </td>';



                sOptions += '</tr>'
            }
            $("#tbody2").html(sOptions);
        }

        function RellenaTablaRD(bit) {
            if (bit) {
                ProdCadenaM = [];
                for (var i = 0; i < Control.length; i++) {

                    var detalle =
                    {
                        id: 0,
                        idEncabezado: "",
                        idProducto: Control[i].idProducto,
                        ItemCode: Control[i].Item + " | " + Control[i].ItemName,
                        Cantidad: 1,
                        Stock: Control[i].CantidadUsado

                    }
                    ProdCadenaM.push(detalle);
                }
            }



            var sOptions = '';

            $("#tbody3").html('');

            for (var i = 0; i < ProdCadenaM.length; i++) {
                sOptions += '<tr>'
                sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].ItemCode + '</p></td>';
                if (parseInt($("#idTraslado").val()) == 3) {

                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">N/A</p></td>';

                } else {
                    sOptions += '<td align="center" style="padding-top:15px;">  <input id="cantidad-' + i + '" value="' + formatoDecimal(ProdCadenaM[i].Cantidad) + '"  type="number" /> </td>';

                }

                sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].Stock + '</p></td>';



                if (parseInt($("#idTraslado").val()) == 3) {
                    sOptions += '<td align="center" style="padding-top:15px;"> </td> ';

                } else {
                    sOptions += '<td align="center" style="padding-top:15px;"><a  onclick="javascript: EliminarProductoDevolver(' + i + ')" style="cursor: pointer; font-size: 25px; line-height: 0px;" title="Eliminar Producto" > X </a> </td>';

                }



                sOptions += '</tr>'
            }
            $("#tbody3").html(sOptions);
        }

        function Generar() {
            var idGeneral = $("#idGeneral").val();
            var tipo = $("#idTraslado").val();
            var status = $("#status").val();
            var comentarios = $("#comentarios").val();
            var BodegaOrigen = $("#bodegaOrigen").val();
            var BodegaFinal = $("#bodegaFinal").val();
            var idDiag = $("#idDiag").val();

            var Cadena = [];


            for (var i = 0; i < ProdCadenaM.length; i++) {
                var det = {
                    id: 0,
                    idEncabezado: 0,
                    idProducto: ProdCadenaM[i].idProducto,
                    ItemCode: ProdCadenaM[i].ItemCode,
                    Cantidad: $("#cantidad-" + i).val(),
                    idError: $("#error-" + i).val()

                };
                Cadena.push(det);
            }

            var bases64 = [];

            for (var i = 0; i < documentosbase64.length; i++) {
                var det = {
                    id: 0,
                    idEncabezado: 0,
                    base64: documentosbase64[i].base64

                };
                bases64.push(det);
            }


            var recibido =
            {
                id: idGeneral,
                Tipo: tipo,
                Status: status,
                StatusLlamada: $("#statusLlamada").val(),
                idLlamada: $("#idLlamada").val(),
                comentarios: comentarios,
                BodegaInicial: BodegaOrigen,
                BodegaFinal: BodegaFinal,
                idDiagnostico: idDiag,
                DetReparacion: Cadena,
                Adjuntos: bases64
            }

            console.log(JSON.stringify(recibido));

            Swal.fire({
                title: '¿Desea crear la entrada?',
                showDenyButton: true,
                showCancelButton: false,
                confirmButtonText: `Aceptar`,
                denyButtonText: `Cancelar`,
                customClass: {
                    confirmButton: 'swalBtnColor',
                    denyButton: 'swalDeny'
                },
            }).then((result) => {
                if (result.isConfirmed) {
                    var recibidos = JSON.stringify(recibido);

                    $.ajax({
                        type: 'POST',

                        url: '@Url.Page("Editar", "Generar")',
                        dataType: 'json',
                        data: { recibidos: recibidos.toString() },
                        headers: {
                            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function(json) {

                            $("#divProcesando").hide();

                            if ($('.modal-backdrop').is(':visible')) {

                                $('body').removeClass('modal-open');
                                $('.modal-backdrop').hide();
                            }
                            console.log("resultado " + json.mensaje);
                            if (json.success == true) {
                                Swal.fire({
                                    title: "Ha sido generado con éxito",

                                    icon: 'success',
                                    showCancelButton: false,

                                    confirmButtonText: 'OK',
                                    customClass: {
                                        confirmButton: 'swalBtnColor',

                                    },
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        if ($("#status").val() == "0") {
                                            location.reload();
                                        } else {
                                            window.location.href = window.location.href.split("/Editar")[0];
                                        }


                                    }
                                })

                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                })
                            }
                        },

                        beforeSend: function(xhr) {

                            $("#divProcesando").modal("show");
                        },
                        complete: function() {

                        },
                        error: function(error) {

                        }
                    });
                }
            }
            )



        }


        function onChangeTipoMovimiento() {
            if (parseInt($("#idTraslado").val()) == 0) {
                $("#rowRepUti").hide();
                $("#rowRepUtilizados").hide();
                $("#rowRepDevolver").hide();
                $("#rowRepAprobados").hide();

            } else if (parseInt($("#idTraslado").val()) == 2 || parseInt($("#idTraslado").val()) == 3) {
                $("#rowRepAprobados").hide();

                $("#rowRepUti").hide();
                $("#rowRepUtilizados").hide();
                $("#rowRepDevolver").show();
                RellenaTablaRD(true);
                $("#titleRepDevolver").text("Repuestos a devolver");
                if (parseInt($("#idTraslado").val()) == 3) {
                    $("#titleRepDevolver").text("Repuestos a cotizar");
                }


            } else {
                Recuperar();
                $("#rowRepAprobados").hide();

                $("#rowRepUti").show();
                $("#rowRepUtilizados").show();
                $("#rowRepDevolver").hide();

                $("#titleRepUti").text("Repuestos Utilizados");

                if (parseInt($("#idTraslado").val()) == 1) {
                    $("#rowRepAprobados").show();
                }
            }
        }



    </script>
    <script type="text/javascript">
        var file = document.getElementById('file');
        var preload = document.querySelector('.preload');

        var formData = new FormData();
        var documentosbase64 = [];

        function resizedataURL(datas, wantedWidth, wantedHeight) {

            return new Promise((resolve, reject) => {
                // We create an image to receive the Data URI
                var img = document.createElement('img');
                var retornar = "";
                // We put the Data URI in the image's src attribute
                img.src = datas;
                // When the event "onload" is triggered we can resize the image.
                img.onload = function() {

                    var height = this.height;
                    var width = this.width;

                    if (height > wantedHeight && width > wantedWidth) {
                        while (height > wantedHeight) {

                            height = height - 100;
                        }
                        while (width > wantedWidth) {
                            width = width - 100;
                        }
                        // We create a canvas and get its context.
                        var canvas = document.createElement('canvas');
                        var ctx = canvas.getContext('2d');

                        // We set the dimensions at the wanted size.
                        canvas.width = width;
                        canvas.height = height;

                        // We resize the image with the canvas method drawImage();
                        ctx.drawImage(this, 0, 0, width, height);

                        var dataURI = canvas.toDataURL();
                        retornar = dataURI;
                        resolve(retornar);
                    } else {
                        resolve(datas);
                    }


                };
            })






        }

        function getBase642(event, id) {
            var input = event.target;

            var reader = new FileReader();
            reader.onload = function() {
                var dataURL = reader.result;

                var imgResized = "";

                resizedataURL(dataURL, 600, 600).then((resized) => {
                    imgResized = resized;
                    var detalle = {
                        id: id,
                        base64: imgResized//dataURL
                    }
                    documentosbase64.push(detalle);
                });


            };
            reader.readAsDataURL(input.files[0]);
        }

        function eliminar(id) {
            documentosbase64.splice(documentosbase64.indexOf(documentosbase64.find(a => a.id == id)), 1)
        }

        file.addEventListener('change', function(e) {

            for (var i = 0; i < file.files.length; i++) {
                var thumbnail_id = Math.floor(Math.random() * 30000) + '_' + Date.now();
                createThumbnail(file, i, thumbnail_id);
                formData.append(thumbnail_id, file.files[i]);
            }
            getBase642(e, thumbnail_id);
            e.target.value = '';

        });



        var createThumbnail = function(file, iterator, thumbnail_id) {
            var thumbnail = document.createElement('div');
            thumbnail.classList.add('thumbnail', thumbnail_id);
            thumbnail.dataset.id = thumbnail_id;

            thumbnail.setAttribute('style', `background-image: url(${URL.createObjectURL(file.files[iterator])})`);
            document.getElementById('preview-images').appendChild(thumbnail);
            createCloseButton(thumbnail_id);
        }

        var createCloseButton = function(thumbnail_id) {
            var closeButton = document.createElement('div');
            closeButton.classList.add('close-button');
            closeButton.innerText = 'x';
            document.getElementsByClassName(thumbnail_id)[0].appendChild(closeButton);
        }

        var clearFormDataAndThumbnails = function() {
            for (var key of formData.keys()) {
                formData.delete(key);
            }

            document.querySelectorAll('.thumbnail').forEach(function(thumbnail) {
                thumbnail.remove();
            });
        }


        document.body.addEventListener('click', function(e) {
            if (e.target.classList.contains('close-button')) {
                e.target.parentNode.remove();
                formData.delete(e.target.parentNode.dataset.id);
                eliminar(e.target.parentNode.dataset.id);

            }
        });


    </script>
    <script>
        // Get the modal
        var modal = document.getElementById('myModal');


        // Get the image and insert it inside the modal - use its "alt" text as a caption
        //   var img = document.getElementById('myImg');
        var modalImg = document.getElementById("img01");
        //var captionText = document.getElementById("caption");
        function onclickImage(id) {
            modal.style.display = "block";
            modalImg.src = $("#" + id).attr('src');

        }

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks on <span> (x), close the modal
        span.onclick = function() {
            modal.style.display = "none";
        }
    </script>


}
    @using Newtonsoft.Json;

    <form method="post" id="formTipos" role="form" novalidate class="needs-validation " enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-sm-6">
                                <h5 class="title">Editar Repuestos</h5>

                            </div>

                            <div class="col-sm-6" style="text-align: right">

                                <a asp-page="./Index" class="nav-link text-dark" style="text-decoration: underline;"><i class="fas fa-reply "></i>  Regresar</a>

                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <input hidden id="HijosDisponibles" value="@JsonConvert.SerializeObject(Model.InputHijos)" />
                        <input hidden id="HijosSeleccionados" value="@JsonConvert.SerializeObject(Model.Input)" />
                        <input hidden id="Errores" value="@JsonConvert.SerializeObject(Model.Errores)" />
                        <input hidden id="Control" value="@JsonConvert.SerializeObject(Model.Control)" />


                        <div class="row">
                            <div class="col-md-4 pr-1">

                                <div class="form-group">
                                    <label>Producto</label>
                                    <input type="text" class="form-control form-control-lg" id="desc" asp-for="Producto" readonly>
                                    <input id="idGeneral" asp-for="Encabezado.id" hidden />
                                </div>


                            </div>




                            <div class="col-md-4 pr-1">

                                <div class="form-group">
                                    <label>Estado de la Reparación</label>
                                    <select id="status" class="form-control" asp-for="Encabezado.Status">
                                        <option value="0" selected>Abierto</option>


                                        <option value="1">Cerrado </option>
                                        <option value="2">Cerrado y Reparado </option>



                                    </select>

                                </div>


                            </div>
                            <div class="col-md-4 pl-1">
                                <div class="form-group">
                                    <label>Estado de la Llamada:</label>
                                    <input asp-for="InputLlamada.id" id="idLlamada" hidden />
                                    <select id="statusLlamada" class="form-control" asp-for="InputLlamada.Status" required>
                                        <option value="0">Seleccione</option>
                                        @foreach (var item in Model.Status.Where(a => a.idSAP == "-3" || a.idSAP == "47" || a.idSAP == "46" || a.idSAP == "48"))
                                    {
                                        <option value="@item.idSAP">@item.Nombre</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Llamada</label>
                                <input type="text" class="form-control form-control-lg" id="idLlamada" asp-for="Encabezado.idLlamada" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Cliente</label>
                                <input type="text" class="form-control form-control-lg" id="desc" asp-for="Cliente" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pl-1">

                            <div class="form-group">
                                <label>Diagnóstico</label>
                                <select id="idDiag" class="form-control" asp-for="Encabezado.idDiagnostico" onchange="javascript: onChangeDiagnostico();">
                                    <option value="0" selected>Seleccione</option>

                                    @foreach (var item in Model.Diagnosticos)
                                    {

                                        <option value="@item.id"> @item.id - @item.Descripcion </option>
                                    }





                                </select>

                            </div>


                        </div>

                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Asunto de la Llamada</label>
                                <input class="form-control" asp-for="InputLlamada.Asunto" readonly />

                            </div>


                        </div>

                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Tipo de Caso</label>
                               <select id="tp" class="form-control" asp-for="InputLlamada.TipoCaso" disabled="disabled">
                                
                                @foreach (var item in Model.TP)
                                {
                                    <option value="@item.idSAP">@item.Nombre</option>
                                }
                            </select>

                            </div>


                        </div>
                    </div>





                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5 class="title">Generar Movimiento</h5>

                        </div>

                        <div class="col-sm-6" style="text-align: right">
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <div class="row">



                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Tipo de Reparación</label>
                                <select id="idTraslado" class="form-control" asp-for="Encabezado.TipoReparacion" onchange="javascript: onChangeTipoMovimiento();">
                                    <option value="0">Seleccione</option>

                                    <option value="4">1- Cotizar BackOffice </option>

                                    <option value="1">2- Solicitud </option>
                                    <option value="2">3- Devolución </option>
                                    <option value="3">4- Cotizar </option>



                                </select>

                            </div>


                        </div>



                        <div class="col-md-4 pr-1" hidden>

                            <div class="form-group">
                                <label>Bodega Origen</label>
                                <select id="bodegaOrigen" class="form-control" asp-for="Encabezado.BodegaOrigen">
                                    <option value="0" selected>Seleccione</option>

                                    @foreach (var item in Model.Bodegas)
                                    {

                                        <option value="@item.codSAP"> @item.codSAP - @item.Nombre </option>
                                    }




                                </select>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1" hidden>

                            <div class="form-group">
                                <label>Bodega Destino</label>
                                <select id="bodegaFinal" class="form-control" asp-for="Encabezado.BodegaFinal">
                                    <option value="0" selected>Seleccione</option>


                                    @foreach (var item in Model.Bodegas)
                                    {

                                        <option value="@item.codSAP"> @item.codSAP - @item.Nombre </option>
                                    }



                                </select>

                            </div>


                        </div>

                    </div>


                </div>
            </div>
        </div>
    </div>


    <div class="row">

        <div id="rowRepAprobados" class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title" id="titleRepAprob"> Repuestos Aprobados</h5>
                        </div>

                        <div class="col-sm-4" style="text-align: right;">
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad Aprobada</th>


                                </tr>

                            </thead>
                            <tbody id="tbody4">
                                @foreach (var item in Model.CotizacionesAprobadas)
                                {
                                    <tr>
                                        <td align="center">@item.ItemCode</td>
                                        <td align="right">@item.Cantidad.ToString("N",formato)</td>

                                    </tr>
                                }

                            </tbody>
                        </table>

                    </div>



                </div>
            </div>
        </div>

        <div class="col-md-12" id="rowRepUti">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title"> Repuestos Utilizables</h5>
                        </div>

                        <div class="col-sm-3">
                            <a onclick="javascript: PasarTodasDerecha()" style="cursor: pointer; font-size: 25px; line-height: 0px;" title="Pasar Todos los Modulos"> >> </a>
                        </div>


                    </div>
                </div>
                <div class="card-body">

                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad </th>
                                    <th align="center" style=" text-align: center;">Stock </th>





                                    <th align="center" style=" text-align: center;">Acción</th>
                                </tr>

                            </thead>
                            <tbody id="tbody1">
                            </tbody>
                        </table>

                    </div>


                </div>
            </div>
        </div>


        <div id="rowRepUtilizados" class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title" id="titleRepUti"> Repuestos utilizados</h5>
                        </div>

                        <div class="col-sm-4" style="text-align: right;">
                            <a onclick="javascript: PasarTodasIzquierda()" style="cursor: pointer; font-size: 25px; line-height: 0px;" title="Pasar Todos los Modulos"><<</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad </th>
                                    <th align="center" style=" text-align: center;">Stock </th>
                                    <th align="center" style=" text-align: center;">Diagnostico </th>





                                    <th align="center" style=" text-align: center;">Acción</th>
                                </tr>

                            </thead>
                            <tbody id="tbody2">
                            </tbody>
                        </table>

                    </div>



                </div>
            </div>
        </div>

        <div id="rowRepDevolver" class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title" id="titleRepDevolver"> Repuestos a Devolver</h5>
                        </div>

                        <div class="col-sm-4" style="text-align: right;">
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad Devuelta</th>
                                    <th align="center" style=" text-align: center;">Cantidad Pedida </th>






                                    <th align="center" style=" text-align: center;">Acción</th>
                                </tr>

                            </thead>
                            <tbody id="tbody3">
                            </tbody>
                        </table>

                    </div>



                </div>
            </div>
        </div>


        <div class="col-sm-6">
            <div class="form-group">
                <label>Comentarios</label>

                <textarea id="comentarios" maxlength="500" class="form-control" asp-for="Encabezado.Comentarios"></textarea>

            </div>
        </div>

         <div class="col-sm-6">
            <div class="form-group">
                <label>Comentarios Llamada</label>

                <textarea id="comentariosLlamada" readonly disabled maxlength="500" class="form-control" asp-for="InputLlamada.Comentarios"></textarea>

            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-8">
                            <h5>Movimientos</h5>
                        </div>
                        <div class="col-md-4">
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered first">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>DocEntry</th>

                                    <th>Tipo Movimiento</th>
                                    <th>Fecha</th>
                                    <th>Bodega Inicial</th>
                                    <th>Bodega Final</th>
                                    <th>Status</th>



                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.BTS)
                                {
                                    <tr>
                                        <td>@item.id</td>
                                        <td>@item.DocEntry</td>

                                        <td>@(item.TipoMovimiento == 1 ? "Solicitud" : "Devolución")</td>
                                        <td>@item.Fecha</td>
                                        <td>@item.BodegaInicial</td>
                                        <td>@item.BodegaFinal</td>
                                        <td>@((item.Status == "0" ? "En espera" : item.Status == "1" ? "Aceptado" : "Rechazado"))</td>

                                    </tr>
                                }


                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>ID</th>
                                    <th>DocEntry</th>

                                    <th>Tipo Movimiento</th>
                                    <th>Fecha</th>
                                    <th>Bodega Inicial</th>
                                    <th>Bodega Final</th>
                                    <th>Status</th>

                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5 class="title">Subir Imágenes</h5>

                        </div>

                        <div class="col-sm-6" style="text-align: right">
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <div id="wrapper">

                        <div id="container-input">
                            <div class="wrap-file">
                                <div class="content-icon-camera">
                                    <input type="file" id="file" name="file[]" accept="image/*" multiple />
                                    <div class="icon-camera"></div>
                                </div>
                                <div id="preview-images">
                                </div>
                            </div>

                        </div>
                        <div class="preload">
                            <img src="assets/images/preload.gif" alt="preload" />
                        </div>
                        <h2 id="success"></h2>
                    </div>
                </div>
            </div>
        </div>

    </div>



    <div class="row">
        <div class="col-sm-12">
            <div class="card">

                <div class="card-body">

                    <div id="menu">
                        @foreach (var item in Model.Encabezado.Adjuntos)
                        {
                            <img src='data:image/png;base64,@item.base64' id="@item.id" name='fotos1' onclick="javascript: onclickImage(@item.id)" />

                        }



                    </div>
                </div>
            </div>
        </div>

    </div>

    <button type="button" onclick="javascript: Generar();" class="btn btn-rounded btn-outline-success">Guardar Cambios</button>
</form>



<!-- The Modal -->
<div id="myModal" class="modal">
    <span class="close">×</span>
    <img class="modal-content" id="img01">

</div>